// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
  repositories {
    mavenLocal()
    maven { url 'https://maven.google.com'  }
    jcenter()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:3.2.1'
  }
}

allprojects {
  repositories {
    mavenLocal()
    maven { url 'https://maven.google.com'  }
    jcenter()
  }
}

apply plugin: 'com.android.application'

android {
  compileSdkVersion 28
  buildToolsVersion '28.0.3'

  sourceSets {
    main {
      jniLibs.srcDirs = ['libs']
      manifest.srcFile 'AndroidManifest.xml'
      java.srcDirs = ['src/android/java']
      res.srcDirs = ['res']
    }
  }

  defaultConfig {
    applicationId 'com.google.falken.testapp'
    minSdkVersion 16
    targetSdkVersion 28
    versionCode 1
    versionName '1.0'
    ndk {
      abiFilters 'arm64-v8a'
    }
    externalNativeBuild.cmake {
      arguments "-DFALKEN_CPP_SDK_DIR=$gradle.falken_cpp_sdk_dir"
    }
  }
  externalNativeBuild.cmake {
    path 'CMakeLists.txt'
    version "$FALKEN_CMAKE_VERSION"
  }
  buildTypes {
    release {
      minifyEnabled true
      proguardFile getDefaultProguardFile('proguard-android.txt')
      proguardFile file('proguard.pro')
    }
  }
}

// Copy Falken library into generated APK.
task extractNdk(type: Copy)  {
  if (file("${gradle.falken_cpp_sdk_dir}/lib/Android/Release/libfalken_cpp_sdk.so").exists()) {
    copy {
      from "${gradle.falken_cpp_sdk_dir}/lib/Android/Release/libfalken_cpp_sdk.so"
      into "libs/arm64-v8a/"
    }
  }
}

build.dependsOn(extractNdk)
